{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ResponseError": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.pass__": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"firstName": {
						"type": "string",
						"nullable": true
					},
					"lastName": {
						"type": "string",
						"nullable": true
					},
					"userName": {
						"type": "string"
					},
					"avatar": {
						"type": "string",
						"nullable": true
					},
					"groups": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"firstName",
					"lastName",
					"userName",
					"avatar",
					"groups"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.pass_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.pass__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"RegistrationSucsessResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/Omit_User.pass_"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IResponseModel_RegistrationSucsessResponse_": {
				"properties": {
					"status": {
						"type": "number",
						"enum": [
							0,
							1
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/RegistrationSucsessResponse"
							}
						],
						"nullable": true
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/ResponseError"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"status",
					"data",
					"errors"
				],
				"type": "object"
			},
			"AuthResponse": {
				"$ref": "#/components/schemas/IResponseModel_RegistrationSucsessResponse_"
			},
			"RegistrationData": {
				"properties": {
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"userName",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginData": {
				"properties": {
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"userName",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Purchase": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"author_id": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"status",
					"title",
					"author_id",
					"id"
				],
				"type": "object",
				"description": "Model Purchase"
			},
			"IResponseModel__results%3F%3APurchase-Array__": {
				"properties": {
					"status": {
						"type": "number",
						"enum": [
							0,
							1
						]
					},
					"data": {
						"properties": {
							"results": {
								"items": {
									"$ref": "#/components/schemas/Purchase"
								},
								"type": "array"
							}
						},
						"type": "object",
						"nullable": true
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/ResponseError"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"status",
					"data",
					"errors"
				],
				"type": "object"
			},
			"IResponseModel_Purchase_": {
				"properties": {
					"status": {
						"type": "number",
						"enum": [
							0,
							1
						]
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Purchase"
							}
						],
						"nullable": true
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/ResponseError"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"status",
					"data",
					"errors"
				],
				"type": "object"
			},
			"AddPurchaseData": {
				"properties": {
					"title": {
						"type": "string"
					}
				},
				"required": [
					"title"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PurchaseState": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"StatePurchaseData": {
				"properties": {
					"purchaseId": {
						"type": "number",
						"format": "double"
					},
					"state": {
						"$ref": "#/components/schemas/PurchaseState"
					}
				},
				"required": [
					"purchaseId",
					"state"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponseModel_boolean_": {
				"properties": {
					"status": {
						"type": "number",
						"enum": [
							0,
							1
						]
					},
					"data": {
						"type": "boolean",
						"nullable": true
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/ResponseError"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"status",
					"data",
					"errors"
				],
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "taskbuyserver",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/registration": {
			"post": {
				"operationId": "Registration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegistrationData"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginData"
							}
						}
					}
				}
			}
		},
		"/auth/auth": {
			"get": {
				"operationId": "Auth",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/purchases": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponseModel__results%3F%3APurchase-Array__"
								}
							}
						}
					}
				},
				"tags": [
					"Purchase"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page_size",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "AddPerchase",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponseModel_Purchase_"
								}
							}
						}
					}
				},
				"tags": [
					"Purchase"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddPurchaseData"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "ChangePurchaseStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponseModel_Purchase_"
								}
							}
						}
					}
				},
				"tags": [
					"Purchase"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/StatePurchaseData"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "RemovePerchase",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponseModel_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"Purchase"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/group": {
			"post": {
				"operationId": "Add",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {},
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Group"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {},
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Group"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}